{"version":3,"file":"static/js/478.f228ad9c.chunk.js","mappings":"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","sources":["components/Header/index.js"],"sourcesContent":["import { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Headers = styled.header`\r\n  display: flex;\r\n  marign-top:0px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  background-color:rgb(32, 32, 32);\r\n  color: var(--white); \r\n  z-index: 50;\r\n  @media only Screen and (max-width: 64em) {\r\n    padding: 0.5rem 5rem;\r\n  }\r\n  @media only Screen and (max-width: 40em) {\r\n    padding: 0.5rem 1rem;\r\n  }\r\n`;\r\n\r\nconst Logo = styled.a`\r\n  border-radius: 15px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: auto;\r\n  height: auto;\r\n  cursor: pointer;\r\n  img {\r\n    border-radius: 40%;\r\n    margin-bottom: 0rem;\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n  h3 {\r\n    margin: 0px 10px;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    line-height: 1.2rem;\r\n    color: rgb(255, 248, 239);\r\n  }\r\n  @media only Screen and (max-width: 48em) {\r\n    img {\r\n      border-radius: 40%;\r\n      margin-bottom: 0rem;\r\n      width: 2rem;\r\n      height: 2rem;\r\n    }\r\n    h3 {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\nconst Nav = styled.nav`\r\n  width: 25rem;\r\n  max-width: 40rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  transition: all 0.3s;\r\n  @media only Screen and (max-width: 48em) {\r\n \r\n    display: none;\r\n  }\r\n  a {\r\n    font-weight: 600;\r\n    line-height: 1.5;\r\n    color: var(--white);\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      height: 3px;\r\n      width: 0;\r\n      background: transparent;\r\n      transition: width 0.5s;\r\n    }\r\n    &:not(:last-child):hover::after {\r\n      width: 100%;\r\n      background: var(--purple);\r\n    }\r\n    /* &:not(:last-child) {\r\n      margin-right: 2rem;\r\n    } */\r\n    /* @media only Screen and (max-width: 48em) {\r\n      &:not(:last-child) {\r\n        margin-right: 1rem;\r\n      }\r\n    } */\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: var(--purple);\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 20px;\r\n  color: var(--white);\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  &:focus {\r\n    transform: scale(0.9);\r\n  }\r\n  @media only Screen and (max-width: 40em) {\r\n    font-size: 1.2rem;\r\n    &:hover {\r\n      transform: none;\r\n    }\r\n    &:focus {\r\n      transform: none;\r\n    }\r\n  }\r\n`;\r\nconst MobileMenu = styled.nav`\r\n  display: none;\r\n  @media only Screen and (max-width: 48em) {\r\n    display: flex;\r\n  }\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;  \r\n  top: 10%;\r\n  left: 35%;\r\n  right: 5%;\r\n  bottom: 60%;\r\n  border-radius :20%;\r\n  opacity: ${(props) => (props.clicked ? '1' : '0')};\r\n    \r\n  z-index: ${(props) => (props.clicked ? '100' : '-10')};\r\n  background-color: rgb(\r\n    53,\r\n    53,\r\n    63,\r\n    0.95\r\n  );  \r\n  transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;\r\n  \r\n\r\n  a {\r\n    color: var(--white, #ffffff);  \r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n    text-decoration: none; /* Remove underline */\r\n    margin: 1rem;\r\n    transition: color 0.3s ease-in-out;\r\n    &:hover {\r\n      color: var(--purple, #6c63ff);  \r\n    }\r\n  }\r\n`;\r\n\r\nconst HamburgerBtn = styled.button`\r\n  display: none;\r\n  @media only Screen and (max-width: 48em) {\r\n    display: inline-block;\r\n  }\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: none;\r\n  width: 2rem;\r\n  height: 2px;\r\n  cursor: pointer;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    background-color: ${(props) =>\r\n      props.clicked ? 'var(--purple, #6c63ff)' : 'var(--white, #ffffff)'};\r\n    width: 2rem;\r\n    height: 2px;\r\n    position: absolute;\r\n    left: 0;\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n  &::before {\r\n    top: ${(props) => (props.clicked ? '0' : '-0.5rem')};\r\n    transform: ${(props) => (props.clicked ? 'rotate(135deg)' : 'rotate(0)')};\r\n  }\r\n  &::after {\r\n    top: ${(props) => (props.clicked ? '0' : '0.5rem')};\r\n    transform: ${(props) => (props.clicked ? 'rotate(-135deg)' : 'rotate(0)')};\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  const [click, setClick] = useState(false); \r\n  const ref = useRef(null);\r\n\r\n  gsap.registerPlugin(ScrollTrigger);\r\n\r\n  const scrollUp = (id, e) => {\r\n    e.preventDefault();\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  const handleClick = (id, e) => {\r\n    setClick(!click);\r\n    scrollUp(id, e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n\r\n    const mq = window.matchMedia(\"(max-width: 40em)\");\r\n \r\n    if (mq.matches) {\r\n      gsap.to(element, {\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        padding: \"1rem 2.5rem\",\r\n\r\n        borderRadius: \"0 0 50px 50px\",\r\n\r\n        border: \"2px solid var(--white)\",\r\n\r\n        duration: 1,\r\n        ease: \"power1.out\",\r\n\r\n        scrollTrigger: {\r\n          trigger: element,\r\n          start: \"bottom+=200 top\",\r\n          end: \"+=100\",\r\n          scrub: true,\r\n        },\r\n      });\r\n    } else {\r\n      gsap.to(element, {\r\n        position: \"fixed\",\r\n        top: \"1rem\",\r\n        left: \"3rem\",\r\n        right: \"3rem\",\r\n        padding: \"1.5rem 2rem\",\r\n\r\n        borderRadius: \"50px\",\r\n\r\n        border: \"3px solid var(--white)\",\r\n\r\n        duration: 1,\r\n        ease: \"power1.out\",\r\n\r\n        scrollTrigger: {\r\n          trigger: element,\r\n          start: \"bottom+=300 top\",\r\n          end: \"+=250\",\r\n          scrub: true,\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Headers ref={ref}>\r\n      <Logo>\r\n        <img\r\n          src={\r\n            'https://res.cloudinary.com/dptf0mrro/image/upload/v1735920388/MH__1_1_pjlq6u.png'\r\n          }\r\n          alt=\"Market Healers\"\r\n        />\r\n        <h3>Market Healers</h3>\r\n      </Logo>\r\n\r\n      <Nav>\r\n        <a href=\"#home\" onClick={(e) => scrollUp('home', e)}>\r\n          Home\r\n        </a>\r\n        <a href=\"#about\" onClick={(e) => scrollUp('about', e)}>\r\n          About Us\r\n        </a>\r\n        <a href=\"#contact\" onClick={(e) => scrollUp('contact', e)}>\r\n          Contact Us\r\n        </a>\r\n        <a href=\"#\">\r\n          {/* <Button>SignIn</Button> */}\r\n        </a>\r\n      </Nav>\r\n      <HamburgerBtn clicked={+click} onClick={() => setClick(!click)}>\r\n        <span></span>\r\n      </HamburgerBtn>\r\n      <MobileMenu clicked={+click}>\r\n        <a href=\"#home\" onClick={(e) => handleClick('home', e)}>\r\n          Home\r\n        </a>\r\n        <a href=\"#about\" onClick={(e) => handleClick('about', e)}>\r\n          About Us\r\n        </a>\r\n        <a href=\"#contact\" onClick={(e) => handleClick('contact', e)}>\r\n          Contact Us\r\n        </a>\r\n        <a href=\"#\">\r\n          {/* <Button>SignIn</Button> */}\r\n        </a>\r\n      </MobileMenu>\r\n    </Headers>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"names":["Headers","styled","header","_templateObject","_taggedTemplateLiteral","Logo","a","_templateObject2","Nav","nav","_templateObject3","MobileMenu","button","_templateObject4","_templateObject5","props","clicked","HamburgerBtn","_templateObject6","Header","click","setClick","useState","ref","useRef","gsap","registerPlugin","ScrollTrigger","scrollUp","id","e","preventDefault","document","getElementById","scrollIntoView","behavior","block","inline","handleClick","useEffect","element","current","window","matchMedia","matches","to","position","top","left","right","padding","borderRadius","border","duration","ease","scrollTrigger","trigger","start","end","scrub","_jsxs","children","_jsx","src","alt","href","onClick"],"sourceRoot":""}